name: docker

on:
  workflow_call:
  push:
    tags:
      - 'image-v*'
jobs:
  docker-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["malusevd99/php-ext-dev:8.1-debug"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Get Tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: olegtarasov/get-tag@v2.1
        id: version_tag
        with:
          tagRegex: "image-v(.*)"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          target: dev
          build-args: |
            IMAGE=${{ matrix.image }}
          tags: ghcr.io/nano-interactive/cassandra-php-driver:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
  docker-production:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["malusevd99/php-ext-dev:8.1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Get Tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: olegtarasov/get-tag@v2.1
        id: version_tag
        with:
          tagRegex: "image-v(.*)"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          target: production
          build-args: |
            IMAGE=${{ matrix.image }}
          tags: ghcr.io/nano-interactive/cassandra-php-driver:${{ steps.version_tag.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

